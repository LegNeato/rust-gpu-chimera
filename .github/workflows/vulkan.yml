name: Vulkan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUST_BACKTRACE: 1

jobs:
  moltenvk-wgpu:
    name: macOS MoltenVK (wgpu)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install MoltenVK via Homebrew
        run: |
          brew install molten-vk
          
          # Set up environment variables for Homebrew MoltenVK
          export VK_ICD_FILENAMES="$(brew --prefix)/share/vulkan/icd.d/MoltenVK_icd.json"
          export DYLD_LIBRARY_PATH="$(brew --prefix)/lib:$DYLD_LIBRARY_PATH"
          
          echo "VK_ICD_FILENAMES=$VK_ICD_FILENAMES" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          
          # Disable validation layers
          echo "VK_INSTANCE_LAYERS=" >> $GITHUB_ENV
          
          # MoltenVK environment variables for better compatibility
          echo "MVK_CONFIG_USE_METAL_ARGUMENT_BUFFERS=0" >> $GITHUB_ENV
          echo "MVK_ALLOW_METAL_FENCES=0" >> $GITHUB_ENV
          echo "MVK_ALLOW_METAL_EVENTS=0" >> $GITHUB_ENV
          
          # Verify installation
          echo "Checking MoltenVK installation:"
          ls -la $(brew --prefix)/share/vulkan/icd.d/
          cat $(brew --prefix)/share/vulkan/icd.d/MoltenVK_icd.json || echo "MoltenVK ICD not found"

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run the demo (wgpu)
        run: cargo run --release --features wgpu,vulkan

      - name: Run unit tests (wgpu)
        run: cargo test --release --features wgpu,vulkan

  moltenvk-ash:
    name: macOS MoltenVK (ash)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install MoltenVK via Homebrew
        run: |
          brew install molten-vk
          
          # Set up environment variables for Homebrew MoltenVK
          export VK_ICD_FILENAMES="$(brew --prefix)/share/vulkan/icd.d/MoltenVK_icd.json"
          export DYLD_LIBRARY_PATH="$(brew --prefix)/lib:$DYLD_LIBRARY_PATH"
          
          echo "VK_ICD_FILENAMES=$VK_ICD_FILENAMES" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          
          # Disable validation layers
          echo "VK_INSTANCE_LAYERS=" >> $GITHUB_ENV
          
          # MoltenVK environment variables for better compatibility
          echo "MVK_CONFIG_USE_METAL_ARGUMENT_BUFFERS=0" >> $GITHUB_ENV
          echo "MVK_ALLOW_METAL_FENCES=0" >> $GITHUB_ENV
          echo "MVK_ALLOW_METAL_EVENTS=0" >> $GITHUB_ENV
          
          # Verify installation
          echo "Checking MoltenVK installation:"
          ls -la $(brew --prefix)/share/vulkan/icd.d/
          cat $(brew --prefix)/share/vulkan/icd.d/MoltenVK_icd.json || echo "MoltenVK ICD not found"

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run the demo (ash)
        run: cargo run --release --features ash

      - name: Run unit tests (ash)
        run: cargo test --release --features ash

  windows-wgpu:
    name: Windows Vulkan (wgpu)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          cache: true
          stripdown: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run the demo (wgpu)
        run: cargo run --release --features wgpu,vulkan

      - name: Run unit tests (wgpu)
        run: cargo test --release --features wgpu,vulkan

  windows-ash:
    name: Windows Vulkan (ash)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          cache: true
          stripdown: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run the demo (ash)
        run: cargo run --release --features ash

      - name: Run unit tests (ash)
        run: cargo test --release --features ash