name: Vulkan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUST_BACKTRACE: 1

jobs:
  moltenvk-wgpu:
    name: macOS MoltenVK (wgpu)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          cache: true
          stripdown: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Setup MoltenVK
        run: |
          # Find MoltenVK ICD file
          export VK_ICD_PATH=$(find $VULKAN_SDK -name "MoltenVK_icd.json" -type f | head -n 1)
          if [ -z "$VK_ICD_PATH" ]; then
            echo "MoltenVK ICD not found!"
            exit 1
          fi
          echo "Found MoltenVK ICD at: $VK_ICD_PATH"
          echo "VK_ICD_FILENAMES=$VK_ICD_PATH" >> $GITHUB_ENV
          
          # Find and set library path
          export VK_LIB_PATH=$(dirname $(find $VULKAN_SDK -name "libMoltenVK.dylib" -type f | head -n 1))
          if [ -n "$VK_LIB_PATH" ]; then
            echo "Found MoltenVK library at: $VK_LIB_PATH"
            echo "DYLD_LIBRARY_PATH=$VK_LIB_PATH:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          fi

      - name: Run the demo (wgpu)
        run: cargo run --release --features wgpu,vulkan

      - name: Run unit tests (wgpu)
        run: cargo test --release --features wgpu,vulkan

  moltenvk-ash:
    name: macOS MoltenVK (ash)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          cache: true
          stripdown: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Setup MoltenVK
        run: |
          # Find MoltenVK ICD file
          export VK_ICD_PATH=$(find $VULKAN_SDK -name "MoltenVK_icd.json" -type f | head -n 1)
          if [ -z "$VK_ICD_PATH" ]; then
            echo "MoltenVK ICD not found!"
            exit 1
          fi
          echo "Found MoltenVK ICD at: $VK_ICD_PATH"
          echo "VK_ICD_FILENAMES=$VK_ICD_PATH" >> $GITHUB_ENV
          
          # Find and set library path
          export VK_LIB_PATH=$(dirname $(find $VULKAN_SDK -name "libMoltenVK.dylib" -type f | head -n 1))
          if [ -n "$VK_LIB_PATH" ]; then
            echo "Found MoltenVK library at: $VK_LIB_PATH"
            echo "DYLD_LIBRARY_PATH=$VK_LIB_PATH:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          fi

      - name: Run the demo (ash)
        run: cargo run --release --features ash

      - name: Run unit tests (ash)
        run: cargo test --release --features ash

  windows-wgpu:
    name: Windows Vulkan (wgpu)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          cache: true
          stripdown: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run the demo (wgpu)
        run: cargo run --release --features wgpu,vulkan

      - name: Run unit tests (wgpu)
        run: cargo test --release --features wgpu,vulkan

  windows-ash:
    name: Windows Vulkan (ash)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          cache: true
          stripdown: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run the demo (ash)
        run: cargo run --release --features ash

      - name: Run unit tests (ash)
        run: cargo test --release --features ash
